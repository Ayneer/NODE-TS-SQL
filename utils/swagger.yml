openapi: 3.0.0
info:
    title: NodeJS-TypeScript-Express-Sequelize-API Boilerplate
    description: Basic API to do a User CRUD using Beaer Token with JWT.
    version: 1.0.0
servers:
    - url: http://localhost:8080/api/v1
      description: Local server
components:
    schemas:
        User:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                email:
                    type: string
        SignUp:
            type: object
            properties:
                user:
                    $ref: "#/components/schemas/User"
                token:
                    type: string
        SignIn:
            type: object
            properties:
                user:
                    type: object
                    properties:
                        name:
                            type: string
                token:
                    type: string
        SignUpBody:
            type: object
            properties:
                data:
                    type: object
                    properties:
                        name:
                            type: string
                        email:
                            type: string
                        password:
                            type: string
        SignInBody:
            type: object
            properties:
                data:
                    type: object
                    properties:
                        email:
                            type: string
                        password:
                            type: string
                    
paths:
    /healthcheck:
        get:
            tags:
            - Index
            summary: Returns a message about the server status.
            description: Not Require a Json Web Token.
            parameters:
                - name: Token
                  in: header
                  description: Any string value, it's just to test.
                  required: true
                  schema:
                    type: object
                    properties:
                        token:
                            type: string
            responses:
                200: # status code
                    description: A Message object response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            message:
                                                type: string
    
    /users/all:
        get:
            tags:
            - Users
            summary: Returns a list of users.
            description: Not Require a Json Web Token to retorn a list of users.
            responses:
                200: # status code
                    description: A JSON array of user objects
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            oneOf:
                                            $ref: "#/components/schemas/User"
                400: # status code
                    description: Bad Operation
                401: # status code
                    description: Unauthorized
                404: # status code
                    description: Forbidden
                500: # status code
                    description: Server error
    /users:
        get:
            tags:
            - Users
            summary: Return a user data by JWT.
            description: Require a Json Web Token to retorn the user.
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer Json Web Token.
                  required: true
                  schema:
                    type: object
                    properties:
                        Authorization:
                            type: string
            responses:
                200: # status code
                    description: A JSON of user object
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                        $ref: "#/components/schemas/User"
                400: # status code
                    description: Bad Operation
                401: # status code
                    description: Unauthorized
                404: # status code
                    description: Forbidden
                500: # status code
                    description: Server error
        delete:
            tags:
            - Users
            summary: Delete a user by JWT.
            description: Require a Json Web Token to delete the user.
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer Json Web Token.
                  required: true
                  schema:
                    type: object
                    properties:
                        Authorization:
                            type: string
            responses:
                200: # status code
                    description: A empty response body
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                400: # status code
                    description: Bad Operation
                401: # status code
                    description: Unauthorized
                404: # status code
                    description: Forbidden
                500: # status code
                    description: Server error
    
    /auth/signup:
        post:
            tags:
            - Auth
            summary: Register a user in the system.
            description: Given the user data to register it in the system
            requestBody:
              description: User data to create it in the system.
              required: true
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/SignUpBody"
            responses:
                200: # status code
                    description: A JSON of signup object
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                        $ref: "#/components/schemas/SignUp"
                                        token:
                                            type: string
                400: # status code
                    description: Bad Operation
                401: # status code
                    description: Unauthorized
                404: # status code
                    description: Forbidden
                500: # status code
                    description: Server error
    /auth/signin:
        post:
            tags:
            - Auth
            summary: Sign in a user in the system.
            description: Given a user's credentials, the system process it and un/authorize the action.
            requestBody:
              description: User data to create it in the system.
              required: true
              content:
                application/json:
                  schema:
                        $ref: "#/components/schemas/SignInBody"
            responses:
                200: # status code
                    description: A JSON of signup object
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                        $ref: "#/components/schemas/SignIn"
                                        token:
                                            type: string
                400: # status code
                    description: Bad Operation
                401: # status code
                    description: Unauthorized
                404: # status code
                    description: Forbidden
                500: # status code
                    description: Server error
        
tags:
  - name: Index
    description: Endpoints to check the server health status.
  - name: Users
    description: Endpoints for to do a CRUD of Users.
  - name: Auth
    description: Endpoints for system auth.  